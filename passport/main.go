// Code generated by hertz generator.

package main

import (
	"context"
	model2 "github.com/ywengineer/smart-kit/passport/internal/model"
	"github.com/ywengineer/smart-kit/pkg/apps"
	"github.com/ywengineer/smart-kit/pkg/logk"
	"gorm.io/gorm"
	"gorm.io/gorm/clause"
)

func main() {
	if h := apps.NewHertzApp("smart-passport",
		apps.NewDefaultContext,
		func(ctx apps.SmartContext) {
			sqlRunner(ctx.Rdb())
		},
		func(ctx context.Context) {
			// ignore
		},
		&model2.Passport{},
		&model2.PassportPunish{},
		&model2.PassportBinding{},
		&model2.WhiteList{},
		&model2.MgrUser{},
	); h != nil {
		register(h)
		h.Spin()
	}
}

func sqlRunner(db *gorm.DB) {
	logk.DefaultLogger().Info(db.ToSQL(func(tx *gorm.DB) *gorm.DB {
		return tx.WithContext(context.Background()).Clauses(clause.OnConflict{
			Columns:   []clause.Column{{Name: "passport"}},                            // 冲突字段（唯一索引）
			DoUpdates: clause.AssignmentColumns([]string{"updated_at", "deleted_at"}), // 更新字段
		}).Create(&model2.WhiteList{Passport: 100})
	}))
}
